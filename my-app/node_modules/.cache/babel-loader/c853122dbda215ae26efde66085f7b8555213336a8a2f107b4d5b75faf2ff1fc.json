{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taliberti\\\\Documents\\\\repositories\\\\rhduxus-desafio-duxus-frontend\\\\my-app\\\\src\\\\components\\\\CadastroTime.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport \"../Styles/CadastroTime.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CadastroTime() {\n  _s();\n  // Definindo estado local para os valores do formulário\n  const [integrantes, setIntegrantes] = useState({});\n  const [nome, setNomeTime] = useState('');\n  const [data, setDataSelecionada] = useState('');\n  const [integrantesSelecionados, setIntegrantesSelecionados] = useState([]);\n  const [erro, setErro] = useState('');\n\n  // Será executado apenas uma vez, ao carregar a página\n  useEffect(() => {\n    // Fazer a solicitação GET para a API ao montar o componente\n    axios.get('http://localhost:8080/duxus/time/cadastro')\n    // Se obtiver resposta da API, passa como argumento para setIngrantes\n    .then(response => {\n      setIntegrantes(response.data);\n    })\n    // Retorna erro para o console.log do navegador\n    .catch(error => {\n      console.error('Erro ao obter os dados:', error);\n    });\n  }, []);\n\n  // Função invocada sempre que a checkbox é clicada\n  const handleCheckboxChange = event => {\n    const idIntegrante = event.target.value;\n    const isChecked = event.target.checked;\n    if (isChecked) {\n      // inclui o integrante no array integrantesSelecionados\n      setIntegrantesSelecionados([...integrantesSelecionados, idIntegrante]);\n    } else {\n      // remove o integrante do array se ele for desmarcado\n      setIntegrantesSelecionados(integrantesSelecionados.filter(id => id !== idIntegrante));\n    }\n  };\n\n  // Função chamada quando o botão \"enviar\" é apertado\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // Verifica se o usuário colocou o nome\n    if (nome == \"\") {\n      alert(\"Por favor, insira o nome do time.\");\n      return;\n    }\n\n    // Verifica se o usuário selecionou a data\n    if (data == \"\") {\n      alert(\"Por favor, insira a data.\");\n      return;\n    }\n\n    // Verifica se o usuário selecionou exatamente 5 opções\n    if (integrantesSelecionados.length !== 5) {\n      alert(\"Por favor, selecione exatamente 5 opções.\");\n      return;\n    }\n\n    // Dados a serem enviados para a API\n    const dados = {\n      nome,\n      data,\n      integrantesID: integrantesSelecionados\n    };\n    axios.post('http://localhost:8080/duxus/time/cadastro', dados).then(response => {\n      console.log('Dados enviados com sucesso:', response.data);\n      // Limpar os campos do formulário após o envio bem-sucedido\n      setNomeTime('');\n      setDataSelecionada('');\n      setIntegrantesSelecionados([]);\n    })\n    // Exibindo popup de erro na tela e no console\n    .catch(error => {\n      console.error('Erro ao enviar dados para a API:', error);\n      setErro('Erro ao enviar dados para a API. Tente novamente mais tarde.');\n      setTimeout(() => {\n        setErro('');\n      }, 2000);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formspace\",\n    children: [erro && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: erro\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nometime\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nome do Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Insira o nome do time...\",\n          value: nome,\n          onChange: e => setNomeTime(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"datatime\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"datainput\",\n          type: \"date\",\n          value: data,\n          onChange: e => setDataSelecionada(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Integrantes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"integrantestime\",\n        children: Object.keys(integrantes).map(id => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"itens\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"checkboxitens\",\n              type: \"checkbox\",\n              value: id,\n              onChange: handleCheckboxChange,\n              checked: integrantesSelecionados.includes(id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"customcheckbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this), integrantes[id].nome, \" / \", integrantes[id].funcao, \" / \", integrantes[id].franquia]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(CadastroTime, \"PHJBiVo/89aLT9RjiKPOORM/9O4=\");\n_c = CadastroTime;\nvar _c;\n$RefreshReg$(_c, \"CadastroTime\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CadastroTime","_s","integrantes","setIntegrantes","nome","setNomeTime","data","setDataSelecionada","integrantesSelecionados","setIntegrantesSelecionados","erro","setErro","get","then","response","catch","error","console","handleCheckboxChange","event","idIntegrante","target","value","isChecked","checked","filter","id","handleSubmit","preventDefault","alert","length","dados","integrantesID","post","log","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","e","Object","keys","map","includes","funcao","franquia","_c","$RefreshReg$"],"sources":["C:/Users/Taliberti/Documents/repositories/rhduxus-desafio-duxus-frontend/my-app/src/components/CadastroTime.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport \"../Styles/CadastroTime.css\"\r\n\r\nexport default function CadastroTime() {\r\n    // Definindo estado local para os valores do formulário\r\n  const [integrantes, setIntegrantes] = useState({});\r\n  const [nome, setNomeTime] = useState('');\r\n  const [data, setDataSelecionada] = useState('');\r\n  const [integrantesSelecionados, setIntegrantesSelecionados] = useState([]);\r\n  const [erro, setErro] = useState('');\r\n\r\n  // Será executado apenas uma vez, ao carregar a página\r\n  useEffect(() => {\r\n    // Fazer a solicitação GET para a API ao montar o componente\r\n    axios.get('http://localhost:8080/duxus/time/cadastro')\r\n      // Se obtiver resposta da API, passa como argumento para setIngrantes\r\n      .then(response => {\r\n        setIntegrantes(response.data);\r\n      })\r\n      // Retorna erro para o console.log do navegador\r\n      .catch(error => {\r\n        console.error('Erro ao obter os dados:', error);\r\n      });\r\n  }, []);\r\n\r\n  // Função invocada sempre que a checkbox é clicada\r\n  const handleCheckboxChange = (event) => {\r\n    const idIntegrante = event.target.value;\r\n    const isChecked = event.target.checked;\r\n\r\n    if (isChecked) {\r\n      // inclui o integrante no array integrantesSelecionados\r\n      setIntegrantesSelecionados([...integrantesSelecionados, idIntegrante]);\r\n    } else {\r\n      // remove o integrante do array se ele for desmarcado\r\n      setIntegrantesSelecionados(integrantesSelecionados.filter(id => id !== idIntegrante));\r\n    }\r\n  };\r\n\r\n  // Função chamada quando o botão \"enviar\" é apertado\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Verifica se o usuário colocou o nome\r\n    if (nome ==\"\") {\r\n      alert(\"Por favor, insira o nome do time.\");\r\n      return\r\n    }\r\n\r\n    // Verifica se o usuário selecionou a data\r\n    if (data == \"\") {\r\n      alert(\"Por favor, insira a data.\");\r\n      return\r\n    }\r\n\r\n    // Verifica se o usuário selecionou exatamente 5 opções\r\n    if (integrantesSelecionados.length !== 5) {\r\n      alert(\"Por favor, selecione exatamente 5 opções.\");\r\n      return;\r\n    }\r\n\r\n    // Dados a serem enviados para a API\r\n    const dados = {\r\n      nome,\r\n      data,\r\n      integrantesID: integrantesSelecionados\r\n    };\r\n\r\n    axios.post('http://localhost:8080/duxus/time/cadastro', dados)\r\n      .then(response => {\r\n        console.log('Dados enviados com sucesso:', response.data);\r\n        // Limpar os campos do formulário após o envio bem-sucedido\r\n        setNomeTime('');\r\n        setDataSelecionada('');\r\n        setIntegrantesSelecionados([]);\r\n      })\r\n      // Exibindo popup de erro na tela e no console\r\n      .catch(error => {\r\n        console.error('Erro ao enviar dados para a API:', error);\r\n        setErro('Erro ao enviar dados para a API. Tente novamente mais tarde.');\r\n        setTimeout(() => {\r\n          setErro('');\r\n        }, 2000);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className='formspace'>\r\n      {erro && <div className=\"popup\">{erro}</div>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div className='nometime'>\r\n          <label>Nome do Time:</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder='Insira o nome do time...'\r\n            value={nome}\r\n            onChange={(e) => setNomeTime(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className='datatime'>\r\n          <label>Data:</label>\r\n          <input\r\n            className='datainput'\r\n            type=\"date\"\r\n            value={data}\r\n            onChange={(e) => setDataSelecionada(e.target.value)}\r\n          />\r\n        </div>\r\n        <label>Integrantes:</label>\r\n        <div className='integrantestime'>\r\n          {Object.keys(integrantes).map(id => (\r\n            <div key={id}>\r\n              <label className='itens'>\r\n                <input \r\n                  className='checkboxitens'\r\n                  type=\"checkbox\" \r\n                  value={id} \r\n                  onChange={handleCheckboxChange} \r\n                  checked={integrantesSelecionados.includes(id)} \r\n                />\r\n                  <span className=\"customcheckbox\"></span>\r\n                  {/*vai mostrar o nome, a função e franquia do integrante no checkbox*/}\r\n                  {integrantes[id].nome} / {integrantes[id].funcao} / {integrantes[id].franquia}\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <button type=\"submit\">Enviar</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACnC;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACS,IAAI,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,IAAI,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAM,CAACa,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1E,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACAC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAACe,GAAG,CAAC,2CAA2C;IACnD;IAAA,CACCC,IAAI,CAACC,QAAQ,IAAI;MAChBX,cAAc,CAACW,QAAQ,CAACR,IAAI,CAAC;IAC/B,CAAC;IACD;IAAA,CACCS,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,oBAAoB,GAAIC,KAAK,IAAK;IACtC,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACvC,MAAMC,SAAS,GAAGJ,KAAK,CAACE,MAAM,CAACG,OAAO;IAEtC,IAAID,SAAS,EAAE;MACb;MACAd,0BAA0B,CAAC,CAAC,GAAGD,uBAAuB,EAAEY,YAAY,CAAC,CAAC;IACxE,CAAC,MAAM;MACL;MACAX,0BAA0B,CAACD,uBAAuB,CAACiB,MAAM,CAACC,EAAE,IAAIA,EAAE,KAAKN,YAAY,CAAC,CAAC;IACvF;EACF,CAAC;;EAED;EACA,MAAMO,YAAY,GAAIR,KAAK,IAAK;IAC9BA,KAAK,CAACS,cAAc,CAAC,CAAC;;IAEtB;IACA,IAAIxB,IAAI,IAAG,EAAE,EAAE;MACbyB,KAAK,CAAC,mCAAmC,CAAC;MAC1C;IACF;;IAEA;IACA,IAAIvB,IAAI,IAAI,EAAE,EAAE;MACduB,KAAK,CAAC,2BAA2B,CAAC;MAClC;IACF;;IAEA;IACA,IAAIrB,uBAAuB,CAACsB,MAAM,KAAK,CAAC,EAAE;MACxCD,KAAK,CAAC,2CAA2C,CAAC;MAClD;IACF;;IAEA;IACA,MAAME,KAAK,GAAG;MACZ3B,IAAI;MACJE,IAAI;MACJ0B,aAAa,EAAExB;IACjB,CAAC;IAEDX,KAAK,CAACoC,IAAI,CAAC,2CAA2C,EAAEF,KAAK,CAAC,CAC3DlB,IAAI,CAACC,QAAQ,IAAI;MAChBG,OAAO,CAACiB,GAAG,CAAC,6BAA6B,EAAEpB,QAAQ,CAACR,IAAI,CAAC;MACzD;MACAD,WAAW,CAAC,EAAE,CAAC;MACfE,kBAAkB,CAAC,EAAE,CAAC;MACtBE,0BAA0B,CAAC,EAAE,CAAC;IAChC,CAAC;IACD;IAAA,CACCM,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxDL,OAAO,CAAC,8DAA8D,CAAC;MACvEwB,UAAU,CAAC,MAAM;QACfxB,OAAO,CAAC,EAAE,CAAC;MACb,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;EACN,CAAC;EAED,oBACEZ,OAAA;IAAKqC,SAAS,EAAC,WAAW;IAAAC,QAAA,GACvB3B,IAAI,iBAAIX,OAAA;MAAKqC,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAE3B;IAAI;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC5C1C,OAAA;MAAM2C,QAAQ,EAAEf,YAAa;MAAAU,QAAA,gBAC3BtC,OAAA;QAAKqC,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvBtC,OAAA;UAAAsC,QAAA,EAAO;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5B1C,OAAA;UACE4C,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,0BAA0B;UACtCtB,KAAK,EAAElB,IAAK;UACZyC,QAAQ,EAAGC,CAAC,IAAKzC,WAAW,CAACyC,CAAC,CAACzB,MAAM,CAACC,KAAK;QAAE;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN1C,OAAA;QAAKqC,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvBtC,OAAA;UAAAsC,QAAA,EAAO;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpB1C,OAAA;UACEqC,SAAS,EAAC,WAAW;UACrBO,IAAI,EAAC,MAAM;UACXrB,KAAK,EAAEhB,IAAK;UACZuC,QAAQ,EAAGC,CAAC,IAAKvC,kBAAkB,CAACuC,CAAC,CAACzB,MAAM,CAACC,KAAK;QAAE;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN1C,OAAA;QAAAsC,QAAA,EAAO;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3B1C,OAAA;QAAKqC,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC7BU,MAAM,CAACC,IAAI,CAAC9C,WAAW,CAAC,CAAC+C,GAAG,CAACvB,EAAE,iBAC9B3B,OAAA;UAAAsC,QAAA,eACEtC,OAAA;YAAOqC,SAAS,EAAC,OAAO;YAAAC,QAAA,gBACtBtC,OAAA;cACEqC,SAAS,EAAC,eAAe;cACzBO,IAAI,EAAC,UAAU;cACfrB,KAAK,EAAEI,EAAG;cACVmB,QAAQ,EAAE3B,oBAAqB;cAC/BM,OAAO,EAAEhB,uBAAuB,CAAC0C,QAAQ,CAACxB,EAAE;YAAE;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/C,CAAC,eACA1C,OAAA;cAAMqC,SAAS,EAAC;YAAgB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,EAEvCvC,WAAW,CAACwB,EAAE,CAAC,CAACtB,IAAI,EAAC,KAAG,EAACF,WAAW,CAACwB,EAAE,CAAC,CAACyB,MAAM,EAAC,KAAG,EAACjD,WAAW,CAACwB,EAAE,CAAC,CAAC0B,QAAQ;UAAA;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1E;QAAC,GAZAf,EAAE;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAaP,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN1C,OAAA;QAAQ4C,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACxC,EAAA,CAhIuBD,YAAY;AAAAqD,EAAA,GAAZrD,YAAY;AAAA,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}