{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taliberti\\\\Documents\\\\repositories\\\\rhduxus-desafio-duxus-frontend\\\\my-app\\\\src\\\\components\\\\CadastroTime.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CadastroTime() {\n  _s();\n  const [integrantes, setIntegrantes] = useState({});\n  useEffect(() => {\n    // Fazer a solicitação para a API ao montar o componente\n    axios.get('http://localhost:8080/duxus/integrante/cadastro').then(response => {\n      setIntegrantes(response.data);\n    }).catch(error => {\n      console.error('Erro ao obter os dados:', error);\n    });\n  }, []); // Executar apenas uma vez ao montar o componente\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Integrantes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: Object.keys(integrantes).map(id => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this), integrantes[id].nome, \" - \", integrantes[id].funcao]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n}\n_s(CadastroTime, \"y490E4W5en2gb+1zlrhlxsLl1Jc=\");\n_c = CadastroTime;\nvar _c;\n$RefreshReg$(_c, \"CadastroTime\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CadastroTime","_s","integrantes","setIntegrantes","get","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","id","type","value","nome","funcao","_c","$RefreshReg$"],"sources":["C:/Users/Taliberti/Documents/repositories/rhduxus-desafio-duxus-frontend/my-app/src/components/CadastroTime.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function CadastroTime() {\r\n    const [integrantes, setIntegrantes] = useState({});\r\n\r\n    useEffect(() => {\r\n      // Fazer a solicitação para a API ao montar o componente\r\n      axios.get('http://localhost:8080/duxus/integrante/cadastro')\r\n        .then(response => {\r\n          setIntegrantes(response.data);\r\n        })\r\n        .catch(error => {\r\n          console.error('Erro ao obter os dados:', error);\r\n        });\r\n    }, []); // Executar apenas uma vez ao montar o componente\r\n  \r\n    return (\r\n      <div>\r\n        <h2>Lista de Integrantes</h2>\r\n        <form>\r\n          {Object.keys(integrantes).map(id => (\r\n            <div key={id}>\r\n              <label>\r\n                <input type=\"checkbox\" value={id} />\r\n                {integrantes[id].nome} - {integrantes[id].funcao}\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </form>\r\n      </div>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAACO,GAAG,CAAC,iDAAiD,CAAC,CACzDC,IAAI,CAACC,QAAQ,IAAI;MAChBH,cAAc,CAACG,QAAQ,CAACC,IAAI,CAAC;IAC/B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEV,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BhB,OAAA;MAAAY,QAAA,EACGK,MAAM,CAACC,IAAI,CAACf,WAAW,CAAC,CAACgB,GAAG,CAACC,EAAE,iBAC9BpB,OAAA;QAAAY,QAAA,eACEZ,OAAA;UAAAY,QAAA,gBACEZ,OAAA;YAAOqB,IAAI,EAAC,UAAU;YAACC,KAAK,EAAEF;UAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EACnCb,WAAW,CAACiB,EAAE,CAAC,CAACG,IAAI,EAAC,KAAG,EAACpB,WAAW,CAACiB,EAAE,CAAC,CAACI,MAAM;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C;MAAC,GAJAI,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEZ;AAACd,EAAA,CA7BuBD,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}