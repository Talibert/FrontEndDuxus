{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taliberti\\\\Documents\\\\repositories\\\\rhduxus-desafio-duxus-frontend\\\\my-app\\\\src\\\\components\\\\CadastroTime.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport \"../Styles/CadastroTime.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CadastroTime() {\n  _s();\n  const [integrantes, setIntegrantes] = useState({});\n  const [nomeTime, setNomeTime] = useState('');\n  const [dataSelecionada, setDataSelecionada] = useState('');\n  const [integrantesSelecionados, setIntegrantesSelecionados] = useState([]);\n  useEffect(() => {\n    // Fazer a solicitação para a API ao montar o componente\n    axios.get('http://localhost:8080/duxus/time/cadastro').then(response => {\n      setIntegrantes(response.data);\n    }).catch(error => {\n      console.error('Erro ao obter os dados:', error);\n    });\n  }, []); // Executar apenas uma vez ao montar o componente\n\n  const handleCheckboxChange = event => {\n    const idIntegrante = event.target.value;\n    const isChecked = event.target.checked;\n    if (isChecked) {\n      setIntegrantesSelecionados([...integrantesSelecionados, idIntegrante]);\n    } else {\n      setIntegrantesSelecionados(integrantesSelecionados.filter(id => id !== idIntegrante));\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Aqui você pode enviar os dados para a rota na API\n    const dados = {\n      nome: nomeTime,\n      data: dataSelecionada,\n      integrantesID: integrantesSelecionados\n    };\n    axios.post('http://localhost:8080/duxus/time/cadastro', dados).then(response => {\n      console.log('Dados enviados com sucesso:', response.data);\n      // Limpar os campos do formulário após o envio bem-sucedido, se necessário\n      setNomeTime('');\n      setDataSelecionada('');\n      setIntegrantesSelecionados([]);\n    }).catch(error => {\n      console.error('Erro ao enviar dados para a API:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nometime\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nome do Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: nomeTime,\n          onChange: e => setNomeTime(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"datatime\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"datainput\",\n          type: \"date\",\n          value: dataSelecionada,\n          onChange: e => setDataSelecionada(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"integrantestime\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Integrantes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), Object.keys(integrantes).map(id => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"itens\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"checkboxitens\",\n              type: \"checkbox\",\n              value: id,\n              onChange: handleCheckboxChange,\n              checked: integrantesSelecionados.includes(id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"custom-checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), integrantes[id].nome, \" - \", integrantes[id].funcao]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(CadastroTime, \"axqrvWjHj9/4ZU44HBWunuOqXHE=\");\n_c = CadastroTime;\nvar _c;\n$RefreshReg$(_c, \"CadastroTime\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CadastroTime","_s","integrantes","setIntegrantes","nomeTime","setNomeTime","dataSelecionada","setDataSelecionada","integrantesSelecionados","setIntegrantesSelecionados","get","then","response","data","catch","error","console","handleCheckboxChange","event","idIntegrante","target","value","isChecked","checked","filter","id","handleSubmit","preventDefault","dados","nome","integrantesID","post","log","children","onSubmit","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","Object","keys","map","includes","funcao","_c","$RefreshReg$"],"sources":["C:/Users/Taliberti/Documents/repositories/rhduxus-desafio-duxus-frontend/my-app/src/components/CadastroTime.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport \"../Styles/CadastroTime.css\"\r\n\r\nexport default function CadastroTime() {\r\n  const [integrantes, setIntegrantes] = useState({});\r\n  const [nomeTime, setNomeTime] = useState('');\r\n  const [dataSelecionada, setDataSelecionada] = useState('');\r\n  const [integrantesSelecionados, setIntegrantesSelecionados] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fazer a solicitação para a API ao montar o componente\r\n    axios.get('http://localhost:8080/duxus/time/cadastro')\r\n      .then(response => {\r\n        setIntegrantes(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Erro ao obter os dados:', error);\r\n      });\r\n  }, []); // Executar apenas uma vez ao montar o componente\r\n\r\n  const handleCheckboxChange = (event) => {\r\n    const idIntegrante = event.target.value;\r\n    const isChecked = event.target.checked;\r\n\r\n    if (isChecked) {\r\n      setIntegrantesSelecionados([...integrantesSelecionados, idIntegrante]);\r\n    } else {\r\n      setIntegrantesSelecionados(integrantesSelecionados.filter(id => id !== idIntegrante));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Aqui você pode enviar os dados para a rota na API\r\n    const dados = {\r\n      nome: nomeTime,\r\n      data: dataSelecionada,\r\n      integrantesID: integrantesSelecionados\r\n    };\r\n\r\n    axios.post('http://localhost:8080/duxus/time/cadastro', dados)\r\n      .then(response => {\r\n        console.log('Dados enviados com sucesso:', response.data);\r\n        // Limpar os campos do formulário após o envio bem-sucedido, se necessário\r\n        setNomeTime('');\r\n        setDataSelecionada('');\r\n        setIntegrantesSelecionados([]);\r\n      })\r\n      .catch(error => {\r\n        console.error('Erro ao enviar dados para a API:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className='nometime'>\r\n          <label>Nome do Time:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={nomeTime}\r\n            onChange={(e) => setNomeTime(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className='datatime'>\r\n          <label>Data:</label>\r\n          <input\r\n            className='datainput'\r\n            type=\"date\"\r\n            value={dataSelecionada}\r\n            onChange={(e) => setDataSelecionada(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className='integrantestime'>\r\n          <label>Integrantes:</label>\r\n          {Object.keys(integrantes).map(id => (\r\n            <div key={id}>\r\n              <label className='itens'>\r\n                <input \r\n                  className='checkboxitens'\r\n                  type=\"checkbox\" \r\n                  value={id} \r\n                  onChange={handleCheckboxChange} \r\n                  checked={integrantesSelecionados.includes(id)} \r\n                />\r\n                <span className=\"custom-checkbox\"></span>\r\n                {integrantes[id].nome} - {integrantes[id].funcao}\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <button type=\"submit\">Enviar</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}