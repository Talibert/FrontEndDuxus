{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taliberti\\\\Documents\\\\repositories\\\\rhduxus-desafio-duxus-frontend\\\\my-app\\\\src\\\\components\\\\TimeDaData.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from 'axios';\nimport \"../Styles/TimeDaData.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TimeDaData() {\n  _s();\n  const [data, setDataSelecionada] = useState('');\n  const [timeNome, setNomeTime] = useState('');\n  const [integrantes, setIngrantes] = useState([]);\n  const [erro, setErro] = useState('');\n\n  // Função para lidar com o envio do formulário\n  const handleSubmit = async event => {\n    event.preventDefault(); // Evitar o comportamento padrão de recarregar a página\n\n    // Verifica se o usuário colocou a data\n    if (data == \"\") {\n      alert(\"Por favor, insira a data.\");\n      return;\n    }\n    try {\n      // Dados a serem enviados para a API\n      const dados = {\n        data\n      };\n\n      // Fazendo a requisição GET para a API\n      const resposta = await axios.get(`http://localhost:8080/duxus/time/timenadata?data=${data}`);\n      const {\n        timeNome,\n        integrantes\n      } = resposta.data;\n      setNomeTime(timeNome);\n      setIngrantes(integrantes);\n\n      // Exibindo a resposta da API\n      console.log('Resposta da API:', resposta.data);\n\n      // Limpar os campos do formulário após o envio bem-sucedido\n      setDataSelecionada('');\n    } catch (erro) {\n      // Exibindo popup de erro na tela e no console\n      console.error('Erro ao enviar dados para API:', erro);\n      setErro('Erro ao enviar dados para a API. Tente novamente mais tarde.');\n      setTimeout(() => {\n        setErro('');\n      }, 2000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timenadatasection\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formspace\",\n      children: [erro && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: erro\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"datatime\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Data:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"datainput\",\n            type: \"date\",\n            value: data,\n            onChange: e => setDataSelecionada(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resultadotime\",\n      children: integrantes.length === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"placeholder\",\n        children: \"Escolha uma data para exibir o time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"nometime\",\n          children: timeNome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), integrantes.map(integrante => /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"integrantes\",\n          children: integrante\n        }, integrante, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(TimeDaData, \"//JA/0DeQd/EhCgyPlbWVRjL2zg=\");\n_c = TimeDaData;\nvar _c;\n$RefreshReg$(_c, \"TimeDaData\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","TimeDaData","_s","data","setDataSelecionada","timeNome","setNomeTime","integrantes","setIngrantes","erro","setErro","handleSubmit","event","preventDefault","alert","dados","resposta","get","console","log","error","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","length","map","integrante","_c","$RefreshReg$"],"sources":["C:/Users/Taliberti/Documents/repositories/rhduxus-desafio-duxus-frontend/my-app/src/components/TimeDaData.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from 'axios';\r\nimport \"../Styles/TimeDaData.css\"\r\n\r\nexport default function TimeDaData() {\r\n    const [data, setDataSelecionada] = useState('');\r\n    const [timeNome, setNomeTime] = useState('');\r\n    const [integrantes, setIngrantes] = useState([]);\r\n    const [erro, setErro] = useState('');\r\n    \r\n      // Função para lidar com o envio do formulário\r\n    const handleSubmit = async (event) => {\r\n    event.preventDefault(); // Evitar o comportamento padrão de recarregar a página\r\n\r\n    // Verifica se o usuário colocou a data\r\n    if (data ==\"\") {\r\n      alert(\"Por favor, insira a data.\");\r\n      return\r\n    }\r\n\r\n    try {\r\n      // Dados a serem enviados para a API\r\n      const dados = {\r\n        data\r\n      };\r\n\r\n      // Fazendo a requisição GET para a API\r\n      const resposta = await axios.get(`http://localhost:8080/duxus/time/timenadata?data=${data}`);\r\n\r\n      const { timeNome, integrantes } = resposta.data\r\n\r\n      setNomeTime(timeNome)\r\n      setIngrantes(integrantes)\r\n\r\n      // Exibindo a resposta da API\r\n      console.log('Resposta da API:', resposta.data);\r\n      \r\n      // Limpar os campos do formulário após o envio bem-sucedido\r\n      setDataSelecionada('');\r\n    } catch (erro) {\r\n      // Exibindo popup de erro na tela e no console\r\n      console.error('Erro ao enviar dados para API:', erro);\r\n      setErro('Erro ao enviar dados para a API. Tente novamente mais tarde.');\r\n        setTimeout(() => {\r\n          setErro('');\r\n        }, 2000);\r\n    }\r\n  };\r\n\r\n    return(\r\n        <div className=\"timenadatasection\">\r\n            <div className='formspace'>\r\n              {erro && <div className=\"popup\">{erro}</div>}\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className='datatime'>\r\n                            <label>Data:</label>\r\n                            <input\r\n                                className='datainput'\r\n                                type=\"date\"\r\n                                value={data}\r\n                                onChange={(e) => setDataSelecionada(e.target.value)}\r\n                            />\r\n                    </div>\r\n                    <button type=\"submit\">Enviar</button>\r\n                </form>\r\n            </div>\r\n            <div className=\"resultadotime\">\r\n                {integrantes.length === 0 ? (\r\n                    <h1 className=\"placeholder\">Escolha uma data para exibir o time</h1>\r\n                    ) : (\r\n                    <div>\r\n                        <h1 className=\"nometime\">{timeNome}</h1>\r\n                        {integrantes.map(integrante => (\r\n                        <h1 className=\"integrantes\" key={integrante}>{integrante}</h1>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n        \r\n    )\r\n} "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}