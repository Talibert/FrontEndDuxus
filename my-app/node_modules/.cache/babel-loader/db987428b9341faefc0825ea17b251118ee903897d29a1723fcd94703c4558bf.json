{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taliberti\\\\Documents\\\\repositories\\\\rhduxus-desafio-duxus-frontend\\\\my-app\\\\src\\\\components\\\\TimeDaData.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from 'axios';\nimport \"../Styles/CadastroTime.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TimeDaData() {\n  _s();\n  const [dataSelecionada, setDataSelecionada] = useState('');\n\n  // Função para lidar com o envio do formulário\n  const handleSubmit = async event => {\n    event.preventDefault(); // Evitar o comportamento padrão de recarregar a página\n\n    // Verifica se o usuário colocou o nome\n    if (data == \"\") {\n      alert(\"Por favor, insira o nome do integrante.\");\n      return;\n    }\n    if (franquia == \"\") {\n      alert(\"escolha a franquia\");\n      return;\n    }\n    if (funcao == \"\") {\n      alert(\"escolha a função\");\n      return;\n    }\n    try {\n      // Dados a serem enviados para a API\n      const dados = {\n        nome,\n        franquia,\n        funcao\n      };\n\n      // Fazendo a requisição POST para a API\n      const resposta = await axios.post('http://localhost:8080/duxus/integrante/cadastro', dados);\n\n      // Exibindo a resposta da API\n      console.log('Resposta da API:', resposta.data);\n\n      // Limpar os campos do formulário após o envio bem-sucedido\n      setNome('');\n    } catch (erro) {\n      // Exibindo erro, caso ocorra\n      console.error('Erro ao enviar dados para API:', erro);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formspace\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"datatime\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"datainput\",\n          type: \"date\",\n          value: dataSelecionada,\n          onChange: e => setDataSelecionada(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(TimeDaData, \"GjwEBm5upK1MD4wXwuGfzVTedqY=\");\n_c = TimeDaData;\nvar _c;\n$RefreshReg$(_c, \"TimeDaData\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","TimeDaData","_s","dataSelecionada","setDataSelecionada","handleSubmit","event","preventDefault","data","alert","franquia","funcao","dados","nome","resposta","post","console","log","setNome","erro","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Taliberti/Documents/repositories/rhduxus-desafio-duxus-frontend/my-app/src/components/TimeDaData.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from 'axios';\r\nimport \"../Styles/CadastroTime.css\"\r\n\r\nexport default function TimeDaData() {\r\n    const [dataSelecionada, setDataSelecionada] = useState('');\r\n    \r\n      // Função para lidar com o envio do formulário\r\n    const handleSubmit = async (event) => {\r\n    event.preventDefault(); // Evitar o comportamento padrão de recarregar a página\r\n\r\n    // Verifica se o usuário colocou o nome\r\n    if (data ==\"\") {\r\n      alert(\"Por favor, insira o nome do integrante.\");\r\n      return\r\n    }\r\n\r\n    if (franquia ==\"\") {\r\n      alert(\"escolha a franquia\")\r\n      return\r\n    }\r\n\r\n    if (funcao ==\"\") {\r\n      alert(\"escolha a função\")\r\n      return\r\n    }\r\n\r\n    try {\r\n      // Dados a serem enviados para a API\r\n      const dados = {\r\n        nome,\r\n        franquia,\r\n        funcao\r\n      };\r\n\r\n      // Fazendo a requisição POST para a API\r\n      const resposta = await axios.post('http://localhost:8080/duxus/integrante/cadastro', dados);\r\n\r\n      // Exibindo a resposta da API\r\n      console.log('Resposta da API:', resposta.data);\r\n      \r\n      // Limpar os campos do formulário após o envio bem-sucedido\r\n      setNome('');\r\n    } catch (erro) {\r\n      // Exibindo erro, caso ocorra\r\n      console.error('Erro ao enviar dados para API:', erro);\r\n    }\r\n  };\r\n\r\n    return(\r\n        <div className='formspace'>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className='datatime'>\r\n                        <label>Data:</label>\r\n                        <input\r\n                            className='datainput'\r\n                            type=\"date\"\r\n                            value={dataSelecionada}\r\n                            onChange={(e) => setDataSelecionada(e.target.value)}\r\n                        />\r\n                </div>\r\n                <button type=\"submit\">Enviar</button>\r\n            </form>\r\n        </div>\r\n        \r\n    )\r\n} "],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACF,MAAMQ,YAAY,GAAG,MAAOC,KAAK,IAAK;IACtCA,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;;IAExB;IACA,IAAIC,IAAI,IAAG,EAAE,EAAE;MACbC,KAAK,CAAC,yCAAyC,CAAC;MAChD;IACF;IAEA,IAAIC,QAAQ,IAAG,EAAE,EAAE;MACjBD,KAAK,CAAC,oBAAoB,CAAC;MAC3B;IACF;IAEA,IAAIE,MAAM,IAAG,EAAE,EAAE;MACfF,KAAK,CAAC,kBAAkB,CAAC;MACzB;IACF;IAEA,IAAI;MACF;MACA,MAAMG,KAAK,GAAG;QACZC,IAAI;QACJH,QAAQ;QACRC;MACF,CAAC;;MAED;MACA,MAAMG,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,iDAAiD,EAAEH,KAAK,CAAC;;MAE3F;MACAI,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,QAAQ,CAACN,IAAI,CAAC;;MAE9C;MACAU,OAAO,CAAC,EAAE,CAAC;IACb,CAAC,CAAC,OAAOC,IAAI,EAAE;MACb;MACAH,OAAO,CAACI,KAAK,CAAC,gCAAgC,EAAED,IAAI,CAAC;IACvD;EACF,CAAC;EAEC,oBACInB,OAAA;IAAKqB,SAAS,EAAC,WAAW;IAAAC,QAAA,eACtBtB,OAAA;MAAMuB,QAAQ,EAAElB,YAAa;MAAAiB,QAAA,gBACzBtB,OAAA;QAAKqB,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACjBtB,OAAA;UAAAsB,QAAA,EAAO;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpB3B,OAAA;UACIqB,SAAS,EAAC,WAAW;UACrBO,IAAI,EAAC,MAAM;UACXC,KAAK,EAAE1B,eAAgB;UACvB2B,QAAQ,EAAGC,CAAC,IAAK3B,kBAAkB,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACN3B,OAAA;QAAQ4B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAGd;AAACzB,EAAA,CA9DuBD,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}