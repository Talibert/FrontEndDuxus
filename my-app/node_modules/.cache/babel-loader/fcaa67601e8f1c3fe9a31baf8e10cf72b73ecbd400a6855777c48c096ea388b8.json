{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taliberti\\\\Documents\\\\repositories\\\\rhduxus-desafio-duxus-frontend\\\\my-app\\\\src\\\\components\\\\TimeDaData.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from 'axios';\nimport \"../Styles/TimeDaData.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TimeDaData() {\n  _s();\n  const [data, setDataSelecionada] = useState('');\n  const [timeNome, setNomeTime] = useState('');\n  const [integrantes, setIngrantes] = useState([]);\n\n  // Função para lidar com o envio do formulário\n  const handleSubmit = async event => {\n    event.preventDefault(); // Evitar o comportamento padrão de recarregar a página\n\n    // Verifica se o usuário colocou a data\n    if (data == \"\") {\n      alert(\"Por favor, insira a data.\");\n      return;\n    }\n    try {\n      // Dados a serem enviados para a API\n      const dados = {\n        data\n      };\n\n      // Fazendo a requisição GET para a API\n      const resposta = await axios.get(`http://localhost:8080/duxus/time/timenadata?data=${data}`);\n      const {\n        timeNome,\n        integrantes\n      } = resposta.data;\n      setNomeTime(timeNome);\n      setIngrantes(integrantes);\n\n      // Exibindo a resposta da API\n      console.log('Resposta da API:', resposta.data);\n\n      // Limpar os campos do formulário após o envio bem-sucedido\n      setDataSelecionada('');\n    } catch (erro) {\n      // Exibindo erro, caso ocorra\n      console.error('Erro ao enviar dados para API:', erro);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timenadatasection\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formspace\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"datatime\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Data:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"datainput\",\n            type: \"date\",\n            value: data,\n            onChange: e => setDataSelecionada(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resultadotime\",\n      children: integrantes.length === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"placeholder\",\n        children: \"Escolha uma data para exibir o time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"nometime\",\n          children: timeNome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), integrantes.map(integrante => /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"integrantes\",\n          children: integrante\n        }, integrante, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(TimeDaData, \"PBi9/JBAOJWNLiQ9lD5PjOx5RTs=\");\n_c = TimeDaData;\nvar _c;\n$RefreshReg$(_c, \"TimeDaData\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","TimeDaData","_s","data","setDataSelecionada","timeNome","setNomeTime","integrantes","setIngrantes","handleSubmit","event","preventDefault","alert","dados","resposta","get","console","log","erro","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","length","map","integrante","_c","$RefreshReg$"],"sources":["C:/Users/Taliberti/Documents/repositories/rhduxus-desafio-duxus-frontend/my-app/src/components/TimeDaData.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from 'axios';\r\nimport \"../Styles/TimeDaData.css\"\r\n\r\nexport default function TimeDaData() {\r\n    const [data, setDataSelecionada] = useState('');\r\n    const [timeNome, setNomeTime] = useState('');\r\n    const [integrantes, setIngrantes] = useState([]);\r\n    \r\n      // Função para lidar com o envio do formulário\r\n    const handleSubmit = async (event) => {\r\n    event.preventDefault(); // Evitar o comportamento padrão de recarregar a página\r\n\r\n    // Verifica se o usuário colocou a data\r\n    if (data ==\"\") {\r\n      alert(\"Por favor, insira a data.\");\r\n      return\r\n    }\r\n\r\n    try {\r\n      // Dados a serem enviados para a API\r\n      const dados = {\r\n        data\r\n      };\r\n\r\n      // Fazendo a requisição GET para a API\r\n      const resposta = await axios.get(`http://localhost:8080/duxus/time/timenadata?data=${data}`);\r\n\r\n      const { timeNome, integrantes } = resposta.data\r\n\r\n      setNomeTime(timeNome)\r\n      setIngrantes(integrantes)\r\n\r\n      // Exibindo a resposta da API\r\n      console.log('Resposta da API:', resposta.data);\r\n      \r\n      // Limpar os campos do formulário após o envio bem-sucedido\r\n      setDataSelecionada('');\r\n    } catch (erro) {\r\n      // Exibindo erro, caso ocorra\r\n      console.error('Erro ao enviar dados para API:', erro);\r\n    }\r\n  };\r\n\r\n    return(\r\n        <div className=\"timenadatasection\">\r\n            <div className='formspace'>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className='datatime'>\r\n                            <label>Data:</label>\r\n                            <input\r\n                                className='datainput'\r\n                                type=\"date\"\r\n                                value={data}\r\n                                onChange={(e) => setDataSelecionada(e.target.value)}\r\n                            />\r\n                    </div>\r\n                    <button type=\"submit\">Enviar</button>\r\n                </form>\r\n            </div>\r\n            <div className=\"resultadotime\">\r\n                {integrantes.length === 0 ? (\r\n                    <h1 className=\"placeholder\">Escolha uma data para exibir o time</h1>\r\n                    ) : (\r\n                    <div>\r\n                        <h1 className=\"nometime\">{timeNome}</h1>\r\n                        {integrantes.map(integrante => (\r\n                        <h1 className=\"integrantes\" key={integrante}>{integrante}</h1>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n        \r\n        \r\n    )\r\n} "],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,WAAW,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACF,MAAMY,YAAY,GAAG,MAAOC,KAAK,IAAK;IACtCA,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;;IAExB;IACA,IAAIR,IAAI,IAAG,EAAE,EAAE;MACbS,KAAK,CAAC,2BAA2B,CAAC;MAClC;IACF;IAEA,IAAI;MACF;MACA,MAAMC,KAAK,GAAG;QACZV;MACF,CAAC;;MAED;MACA,MAAMW,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAE,oDAAmDZ,IAAK,EAAC,CAAC;MAE5F,MAAM;QAAEE,QAAQ;QAAEE;MAAY,CAAC,GAAGO,QAAQ,CAACX,IAAI;MAE/CG,WAAW,CAACD,QAAQ,CAAC;MACrBG,YAAY,CAACD,WAAW,CAAC;;MAEzB;MACAS,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,QAAQ,CAACX,IAAI,CAAC;;MAE9C;MACAC,kBAAkB,CAAC,EAAE,CAAC;IACxB,CAAC,CAAC,OAAOc,IAAI,EAAE;MACb;MACAF,OAAO,CAACG,KAAK,CAAC,gCAAgC,EAAED,IAAI,CAAC;IACvD;EACF,CAAC;EAEC,oBACIlB,OAAA;IAAKoB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9BrB,OAAA;MAAKoB,SAAS,EAAC,WAAW;MAAAC,QAAA,eACtBrB,OAAA;QAAMsB,QAAQ,EAAEb,YAAa;QAAAY,QAAA,gBACzBrB,OAAA;UAAKoB,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACjBrB,OAAA;YAAAqB,QAAA,EAAO;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpB1B,OAAA;YACIoB,SAAS,EAAC,WAAW;YACrBO,IAAI,EAAC,MAAM;YACXC,KAAK,EAAEzB,IAAK;YACZ0B,QAAQ,EAAGC,CAAC,IAAK1B,kBAAkB,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACN1B,OAAA;UAAQ2B,IAAI,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACN1B,OAAA;MAAKoB,SAAS,EAAC,eAAe;MAAAC,QAAA,EACzBd,WAAW,CAACyB,MAAM,KAAK,CAAC,gBACrBhC,OAAA;QAAIoB,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAmC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,gBAEpE1B,OAAA;QAAAqB,QAAA,gBACIrB,OAAA;UAAIoB,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAEhB;QAAQ;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACvCnB,WAAW,CAAC0B,GAAG,CAACC,UAAU,iBAC3BlC,OAAA;UAAIoB,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAmBa;QAAU,GAAvBA,UAAU;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkB,CAC5D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IACR;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAId;AAACxB,EAAA,CAxEuBD,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}